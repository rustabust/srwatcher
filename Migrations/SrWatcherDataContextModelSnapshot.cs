// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sr_watcher.Data;

#nullable disable

namespace sr_watcher.Migrations
{
    [DbContext(typeof(SrWatcherDataContext))]
    partial class SrWatcherDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("sr_watcher.DTO.RedditApiPostData", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("author")
                        .HasColumnType("TEXT");

                    b.Property<string>("author_fullname")
                        .HasColumnType("TEXT");

                    b.Property<double>("created_utc")
                        .HasColumnType("REAL");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("permalink")
                        .HasColumnType("TEXT");

                    b.Property<string>("selftext")
                        .HasColumnType("TEXT");

                    b.Property<string>("selftext_html")
                        .HasColumnType("TEXT");

                    b.Property<string>("subreddit")
                        .HasColumnType("TEXT");

                    b.Property<string>("subreddit_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<int>("ups")
                        .HasColumnType("INTEGER");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("RedditApiPosts");
                });

            modelBuilder.Entity("sr_watcher.Data.AuthorTotal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalUps")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AuthorTotals");
                });

            modelBuilder.Entity("sr_watcher.Data.RedditApiBookmark", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiBaseUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookmarkValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RedditApiBookmarks");
                });
#pragma warning restore 612, 618
        }
    }
}
